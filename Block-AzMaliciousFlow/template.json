{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logAnalytics": {
            "type": "String",
            "metadata": {
                "displayName": "Log Analytics workspace ID where you send Traffic Analytics logs",
                "description": "Log Analytics workspace ID where you send Traffic Analytics logs"
            }
        },
        "logicAppName": {
            "defaultValue": "Block-MaliciousFlow",
            "type": "String",
            "metadata": {
                "description": "The logic app name"
            }
        },
        "office365ConnectionName": {
            "defaultValue": "office365",
            "type": "String",
            "metadata": {
                "description": "Office 365 Connection name used for alerting"
            }
        },
        "azureLoganalyticsDataCollectorName": {
            "defaultValue": "azureLoganalyticsDataCollector",
            "type": "String",
            "metadata": {
                "description": "Azure Logs Analytics Collector Connection name used to probe data from a Log Analytics workspace"
            }
        },
        "actionGroupName": {
            "defaultValue": "block-malicious-flows",
            "type": "String",
            "metadata": {
                "description": "Log Analytics Workspace Acton Group name"
            }
        },
        "scheduledQueryRuleName": {
            "defaultValue": "Malicious flows detected by NSG Traffic Analytics",
            "type": "String",
            "metadata": {
                "description": "Log Analytics Alert Query name"
            }
        },
        "sendEmailTo": {
            "type": "String",
            "metadata": {
                "description": "Recipient's email address"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "tags": {
            "type": "Object",
            "defaultValue": {
                "deploymentmode": "armtemplate",
                "description": "Block malicious flows"
            },
            "metadata": {
                "description": "Tags"
            }
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('actionGroupName')]",
            "location": "Global",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
            ],
            "properties": {
                "groupShortName": "malicious",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [
                    {
                        "name": "[parameters('logicAppName')]",
                        "resourceId": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]",
                        "callbackUrl": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/manual'), '2016-06-01').value]",
                        "useCommonAlertSchema": false
                    }
                ],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2020-05-01-preview",
            "name": "[parameters('scheduledQueryRuleName')]",
            "location": "westeurope",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]"
            ],
            "properties": {
                "displayName": "[parameters('scheduledQueryRuleName')]",
                "description": "Will be blocked by Logic App",
                "severity": 2,
                "enabled": true,
                "evaluationFrequency": "PT10M",
                "scopes": [
                    "[parameters('logAnalytics')]"
                ],
                "windowSize": "PT10M",
                "criteria": {
                    "allOf": [
                        {
                            "query": "AzureNetworkAnalytics_CL\r\n| where FlowType_s == \"MaliciousFlow\" and FlowStatus_s == \"A\"",
                            "timeAggregation": "Count",
                            "operator": "GreaterThanOrEqual",
                            "threshold": 1,
                            "failingPeriods": {
                                "numberOfEvaluationPeriods": 1,
                                "minFailingPeriodsToAlert": 1
                            }
                        }
                    ]
                },
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('office365ConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "kind": "V1",
            "properties": {
                "displayName": "Send email like ASC Score, NSG Malicious flows, ..",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('azureLoganalyticsDataCollectorName')]",
            "location": "westeurope",
            "tags": "[parameters('tags')]",
            "kind": "V1",
            "properties": {
                "displayName": "Get Azure Log Analytics Workspace Logs",
                "parameterValues": {
                    "username": "[reference(parameters('logAnalytics'), '2015-03-20').customerId]",
                    "password": "[listKeys(parameters('logAnalytics'), providers('Microsoft.OperationalInsights', 'workspaces').apiVersions[0]).primarySharedKey]"
                },
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', parameters('azureLoganalyticsDataCollectorName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "For_each_Malicious_flows": {
                            "actions": {
                                "Filter_Inbound_NSG_rules": {
                                    "inputs": {
                                        "from": "@body('HTTP_-_Get_NSG_rules')?['value']",
                                        "where": "@equals(item()?['properties']?['direction'], 'Inbound')"
                                    },
                                    "runAfter": {
                                        "HTTP_-_Get_NSG_rules": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query"
                                },
                                "For_each_Inbound_NSG_rules": {
                                    "actions": {
                                        "Condition_-_Checking_if_rule_priority_is_available": {
                                            "actions": {
                                                "Increment_NSG_rule_priority": {
                                                    "inputs": {
                                                        "name": "rulePriority"
                                                    },
                                                    "runAfter": {},
                                                    "type": "IncrementVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@item()?['properties']?['priority']",
                                                            "@variables('rulePriority')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        }
                                    },
                                    "foreach": "@body('Filter_Inbound_NSG_rules')",
                                    "runAfter": {
                                        "Reset_NSG_rule_priority": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTTP_-_Create_NSG_Rule": {
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "properties": {
                                                "access": "Deny",
                                                "destinationAddressPrefix": "@{items('For_each_Malicious_flows')['DestinationIP']}",
                                                "destinationPortRange": "*",
                                                "direction": "Inbound",
                                                "priority": "@variables('rulePriority')",
                                                "protocol": "*",
                                                "sourceAddressPrefix": "@{items('For_each_Malicious_flows')['SourceIP']}",
                                                "sourcePortRange": "*"
                                            }
                                        },
                                        "method": "PUT",
                                        "uri": "https://management.azure.com/subscriptions/@{items('For_each_Malicious_flows')['SubscriptionId']}/resourceGroups/@{items('For_each_Malicious_flows')['NSGRgName']}/providers/Microsoft.Network/networkSecurityGroups/@{items('For_each_Malicious_flows')['NSGName']}/securityRules/BlockMaliciousFlow-@{variables('rulePriority')}?api-version=2020-05-01"
                                    },
                                    "runAfter": {
                                        "For_each_Inbound_NSG_rules": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                },
                                "HTTP_-_Get_NSG_rules": {
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://management.azure.com/subscriptions/@{items('For_each_Malicious_flows')['SubscriptionId']}/resourceGroups/@{items('For_each_Malicious_flows')['NSGRgName']}/providers/Microsoft.Network/networkSecurityGroups/@{items('For_each_Malicious_flows')['NSGName']}/securityRules?api-version=2020-05-01"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                },
                                "Reset_NSG_rule_priority": {
                                    "inputs": {
                                        "name": "rulePriority",
                                        "value": 100
                                    },
                                    "runAfter": {
                                        "Filter_Inbound_NSG_rules": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Send_an_email_(V2)": {
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>@{variables('emailBody')}</p>",
                                            "Importance": "High",
                                            "Subject": "Malicious flows blocked - Detected by NSG Traffic Analytics - Blocked by Logic App",
                                            "To": "@parameters('complianceEmailAddress')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    },
                                    "runAfter": {
                                        "Set_email_body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Set_email_body": {
                                    "inputs": {
                                        "name": "emailBody",
                                        "value": "<style type=\"text/css\">\n\th1 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 32px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 30px;\n\t}\n\n\th2 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 20px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 15px;\n\t}\n\n\th3 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 22px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 23.1px;\n\t}\n\n\tp {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 16px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 400;\n\t\tline-height: 20px;\n\t}\n</style>\n<table align=\"center\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:800px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th style=\"text-align:center; width:735px\">\n\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 550px;\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td><img src=\"https://raw.githubusercontent.com/Azure/Azure-Security-Center/master/.github/images/asc.png\" alt=\"\" width=\"125\" height=\"125\" /></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<h1 style=\"text-align: left;\">Azure Traffic Analytics</h1>\n\t\t\t\t\t\t\t\t<h2 style=\"text-align: left;\">Malicious flows blocked!</h2>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width:735px\">\n\t\t\t\t<p style=\"text-align: center;\">Azure Traffic Analytics has detected a malicious flow from <strong>source IP: @{items('For_each_Malicious_flows')['SourceIP']} located in the country code @{items('For_each_Malicious_flows')['Country_s']}</strong> on your machine <strong>@{items('For_each_Malicious_flows')['VM_s']}</strong>. The attack was stopped by blocking the attacking IP address(es) in the VM's Network Security Group (NSG) . Please review the VM's network configuration and change it if necessary.</p>\n\t\t\t</td>\n\t\t</tr>\n<tr><td>&nbsp;</td></tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 735px; border-color: rgb(221, 221, 221); border-bottom-style: solid;\">\n\t\t\t\t<h3>Network Security Group used to block the malicious flows</h3>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width:735px\">\n\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 750px;\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Subscription</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>@{items('For_each_Malicious_flows')['SubscriptionId']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Resource Group</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>@{items('For_each_Malicious_flows')['NSGRgName']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Name</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>@{items('For_each_Malicious_flows')['NSGName']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Rule</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>BlockMaliciousFlow-@{variables('rulePriority')}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n<tr><td>&nbsp;</td></tr>\n        <tr>\n\t\t\t<td style=\"width: 735px; border-color: rgb(221, 221, 221); border-bottom-style: solid;\">\n\t\t\t\t<h3>Alert detail</h3>\n\t\t\t</td>\n        </tr>\n        <td style=\"width:735px\">\n\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 750px;\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Flow start time (UTC)</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>@{items('For_each_Malicious_flows')['FlowStartTime_t']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Flow end time (UTC)</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>@{items('For_each_Malicious_flows')['FlowEndTime_t']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Source</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>IP: @{items('For_each_Malicious_flows')['SourceIP']}, Country code: @{items('For_each_Malicious_flows')['Country_s']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Destination</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>IP: @{items('For_each_Malicious_flows')['DestinationIP']}, Subnet: @{items('For_each_Malicious_flows')['DestinationSubnet']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 200px;\">\n\t\t\t\t\t\t\t\t<p><strong>Protocol</strong></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 550px;\">\n\t\t\t\t\t\t\t\t<p>Protocol: @{items('For_each_Malicious_flows')['Protocol']}, Port:  @{items('For_each_Malicious_flows')['DestinationPort']}</p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n        </tr>\n<tr><td>&nbsp;</td></tr>\n        <tr>\n\t\t\t<td style=\"width: 735px; border-color: rgb(221, 221, 221); border-bottom-style: solid;\">\n\t\t\t\t<h3>Reference document</h3>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width:735px\">\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<p>Click <a href=\"https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics-schema?WT.mc_id=AZ-MVP-5003548\">here</a> to view the schema and data aggregation in Traffic Analytics.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<p>Click <a href=\"https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics?WT.mc_id=AZ-MVP-5003548\">here</a> to get information on how works Traffic Analytics.</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<p>Click <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">here</a> to view the country codes reference guide.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>"
                                    },
                                    "runAfter": {
                                        "HTTP_-_Create_NSG_Rule": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "foreach": "@body('Json_-_Parse_malicious_flows')",
                            "runAfter": {
                                "Json_-_Parse_malicious_flows": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "Get_Malicious_flows_from_Traffic_Analytics": {
                            "inputs": {
                                "body": "AzureNetworkAnalytics_CL \n| where TimeGenerated >= todatetime(\"@{triggerBody()?['data']?['alertContext']?['condition']?['windowStartTime']}\") - 10m\n| extend SourceIP=SrcIP_s\n| extend DestinationIP=DestIP_s\n| extend SubscriptionId=tostring(split(NSGList_s, '/', 0)[0])\n| extend NSGRuleAction = FlowStatus_s\n| extend NSGRuleName = NSGRule_s\n| extend NSGName=tostring(split(NSGList_s, '/', 2)[0])\n| extend NSGRgName=tostring(split(NSGList_s, '/', 1)[0])\n| extend VMRgName = tostring(split(VM_s, '/', 0)[0])\n| extend VMName = tostring(split(VM_s, '/', 1)[0])\n| where \"'A'\" has NSGRuleAction\n| where FlowType_s == \"MaliciousFlow\"\n| project TimeGenerated, TimeProcessed_t, FlowStartTime_t, FlowEndTime_t, FlowIntervalStartTime_t, FlowIntervalEndTime_t, SubscriptionId, VMRgName, VMName, NSGRgName, NSGName, NSGRuleName, Country_s, SourceIP, DestinationIP, DestinationPort=DestPort_d, VM_s, Protocol=L7Protocol_s, [\"RuleAction\"]=NSGRuleAction, DestinationSubnet=Subnet2_s\n| sort by TimeGenerated asc \n| take @{first(triggerBody()?['data']?['alertContext']?['condition']?['allOf'])?['metricValue']}",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "@first(skip(split(variables('logAnalyticsWorkspaceId'),'/'),4))",
                                    "resourcename": "@first(skip(split(variables('logAnalyticsWorkspaceId'),'/'),8))",
                                    "resourcetype": "@first(skip(split(variables('logAnalyticsWorkspaceId'),'/'),6))",
                                    "subscriptions": "@first(skip(split(variables('logAnalyticsWorkspaceId'),'/'),2))",
                                    "timerange": "last 24 hours"
                                }
                            },
                            "runAfter": {
                                "Initialize_logAnalyticsWorkspaceId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Initialize_NSG_rule_priority": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "rulePriority",
                                        "type": "integer",
                                        "value": 100
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_email_body": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailBody",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_NSG_rule_priority": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_logAnalyticsWorkspaceId": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "logAnalyticsWorkspaceId",
                                        "type": "string",
                                        "value": "@first(triggerBody()?['data']?['essentials']?['alertTargetIDs'])"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_email_body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Json_-_Parse_malicious_flows": {
                            "inputs": {
                                "content": "@body('Get_Malicious_flows_from_Traffic_Analytics')?['value']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Country_s": {
                                                "type": "string"
                                            },
                                            "DestinationIP": {
                                                "type": "string"
                                            },
                                            "DestinationPort": {
                                                "type": "integer"
                                            },
                                            "DestinationSubnet": {
                                                "type": "string"
                                            },
                                            "FlowEndTime_t": {
                                                "type": "string"
                                            },
                                            "FlowIntervalEndTime_t": {
                                                "type": "string"
                                            },
                                            "FlowIntervalStartTime_t": {
                                                "type": "string"
                                            },
                                            "FlowStartTime_t": {
                                                "type": "string"
                                            },
                                            "NSGName": {
                                                "type": "string"
                                            },
                                            "NSGRgName": {
                                                "type": "string"
                                            },
                                            "NSGRuleName": {
                                                "type": "string"
                                            },
                                            "Protocol": {
                                                "type": "string"
                                            },
                                            "RuleAction": {
                                                "type": "string"
                                            },
                                            "SourceIP": {
                                                "type": "string"
                                            },
                                            "SubscriptionId": {
                                                "type": "string"
                                            },
                                            "TimeGenerated": {
                                                "type": "string"
                                            },
                                            "TimeProcessed_t": {
                                                "type": "string"
                                            },
                                            "VMName": {
                                                "type": "string"
                                            },
                                            "VMRgName": {
                                                "type": "string"
                                            },
                                            "VM_s": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "TimeGenerated",
                                            "TimeProcessed_t",
                                            "FlowStartTime_t",
                                            "FlowEndTime_t",
                                            "FlowIntervalStartTime_t",
                                            "FlowIntervalEndTime_t",
                                            "SubscriptionId",
                                            "VMRgName",
                                            "VMName",
                                            "NSGRgName",
                                            "NSGName",
                                            "NSGRuleName",
                                            "Country_s",
                                            "SourceIP",
                                            "DestinationIP",
                                            "DestinationPort",
                                            "VM_s",
                                            "Protocol",
                                            "RuleAction",
                                            "DestinationSubnet"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "runAfter": {
                                "Get_Malicious_flows_from_Traffic_Analytics": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "complianceEmailAddress": {
                            "defaultValue": "",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "context": {
                                                    "properties": {
                                                        "activityLog": {
                                                            "properties": {
                                                                "authorization": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "type": "string"
                                                                        },
                                                                        "scope": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "caller": {
                                                                    "type": "string"
                                                                },
                                                                "channels": {
                                                                    "type": "string"
                                                                },
                                                                "claims": {
                                                                    "type": "string"
                                                                },
                                                                "correlationId": {
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "type": "string"
                                                                },
                                                                "eventDataId": {
                                                                    "type": "string"
                                                                },
                                                                "eventSource": {
                                                                    "type": "string"
                                                                },
                                                                "eventTimestamp": {
                                                                    "type": "string"
                                                                },
                                                                "level": {
                                                                    "type": "string"
                                                                },
                                                                "operationId": {
                                                                    "type": "string"
                                                                },
                                                                "operationName": {
                                                                    "type": "string"
                                                                },
                                                                "resourceGroupName": {
                                                                    "type": "string"
                                                                },
                                                                "resourceId": {
                                                                    "type": "string"
                                                                },
                                                                "resourceProviderName": {
                                                                    "type": "string"
                                                                },
                                                                "resourceType": {
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "type": "string"
                                                                },
                                                                "subStatus": {
                                                                    "type": "string"
                                                                },
                                                                "submissionTimestamp": {
                                                                    "type": "string"
                                                                },
                                                                "subscriptionId": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "properties": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "schemaId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365ConnectionName'))]",
                                "connectionName": "office365",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "azureloganalyticsdatacollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureLoganalyticsDataCollectorName'))]",
                                "connectionName": "azureLoganalyticsDataCollector",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                            }
                        }
                    },
                    "complianceEmailAddress": {
                        "value": "[parameters('sendEmailTo')]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}